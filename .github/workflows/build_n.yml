name: Build & Deploy iOS Application

on:
  push:
    paths:
      - .github/workflows/build_n.yml

jobs:
  build:
    runs-on: macOS-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      
      - name: Install CocoaPods
        run: |
          gem install cocoapods
          pod install

      - name: Build iOS App and Generate IPA
        run: |
          xcodebuild -workspace CICDAutomate.xcworkspace -scheme CICDAutomate -configuration Release -archivePath $HOME/build/CICDAutomate.xcarchive archive
          xcodebuild -exportArchive -archivePath $HOME/build/CICDAutomate.xcarchive -exportPath $HOME/build -exportOptionsPlist ExportOptions.plist
        env:
          DEVELOPER_DIR: /Applications/Xcode.app/Contents/Developer

      - name: Move IPA to Release Folder
        run: |
          mkdir -p gitrelease
          mv $HOME/build/*.ipa gitrelease/
          
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: v5.1.1  # Replace with your desired tag name
          release_name: Release v5.1.1 # Replace with your desired release name
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN_GITHUB }}
          
      - name: Upload IPA to Release
        id: upload_release
        run: |
          gh release upload v5.1.1 gitrelease/*.ipa --clobber
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN_GITHUB }}

      - name: Get Download URL
        id: get_download_url
        run: |
          echo "::set-output name=download_url::$(curl -sH 'Authorization: token ${{ secrets.TOKEN_GITHUB }}' https://api.github.com/repos/${GITHUB_REPOSITORY}/releases/${{ steps.create_release.outputs.id }}/assets | jq -r '.[] | select(.name == \"CICDAutomate.ipa\") | .browser_download_url')"
        shell: bash
        
      - name: Display Download URL
        run: |
          echo "Download URL: ${{ steps.get_download_url.outputs.download_url }}"
