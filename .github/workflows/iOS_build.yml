#name: iOS Build App
#
#on:
#  push:
#    branches:
#      - main
#  pull_request:
#    branches:
#      - main
#
#jobs:
#  build:
#    runs-on: macOS-latest
#
#    steps:
#      - name: check Xcode version
#        run: /usr/bin/xcodebuild -version
#
#      - name: checkout repository
#        uses: actions/checkout@v3
#
#      - name: Install dependencies
#        run: |
#          gem install cocoapods
#          pod install
#
#      - name: Build
#        run: |
#          xcodebuild clean build -workspace CICDAutomate.xcworkspace -scheme CICDAutomate -destination 'platform=iOS Simulator,name=iPhone 13 Pro Max'
#
#      - name: Archive
#        run: |
#          xcodebuild archive -workspace CICDAutomate.xcworkspace -scheme CICDAutomate -archivePath build/CICDAutomate.xcarchive
#
#      - name: Export archive
#        run: |
#          xcodebuild -exportArchive -archivePath build/CICDAutomate.xcarchive -exportOptionsPlist ExportOptions.plist -exportPath build






#name: "Build iOS APPLICATION"
#
#on:
#  push:
#    branches:
#      - main
#  pull_request:
#    branches:
#      - main
#
#jobs:
#  build_with_signing:
#    runs-on: macos-latest
#    steps:
#      - name: check Xcode version
#        run: /usr/bin/xcodebuild -version
#
#      - name: checkout repository
#        uses: actions/checkout@v3
#
#      - name: Install the Apple certificate and provisioning profile
#        env:
#          BUILD_CERTIFICATE_BASE64: ${{ secrets.BUILD_CERTIFICATE_BASE64 }}
#          P12_PASSWORD: ${{ secrets.P12_PASSWORD }}
#          BUILD_PROVISION_PROFILE_BASE64: ${{ secrets.BUILD_PROVISION_PROFILE_BASE64 }}
#          KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}
#        run: |
#          # create variables
#          CERTIFICATE_PATH=$RUNNER_TEMP/build_certificate.p12
#          PP_PATH=$RUNNER_TEMP/build_pp.mobileprovision
#          KEYCHAIN_PATH=$RUNNER_TEMP/app-signing.keychain-db
#
#          # import certificate and provisioning profile from secrets
#          echo -n "$BUILD_CERTIFICATE_BASE64" | base64 --decode -o $CERTIFICATE_PATH
#          echo -n "$BUILD_PROVISION_PROFILE_BASE64" | base64 --decode -o $PP_PATH
#
#          # create temporary keychain
#          security create-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
#          security set-keychain-settings -lut 21600 $KEYCHAIN_PATH
#          security unlock-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
#
#          # import certificate to keychain
#          security import $CERTIFICATE_PATH -P "$P12_PASSWORD" -A -t cert -f pkcs12 -k $KEYCHAIN_PATH
#          security list-keychain -d user -s $KEYCHAIN_PATH
#
#          # apply provisioning profile
#          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
#          cp $PP_PATH ~/Library/MobileDevice/Provisioning\ Profiles
#
#      - name: build archive
#        run: |
#          xcodebuild -scheme "CICDAutomate" \
#          -archivePath $RUNNER_TEMP/CICDAutomate.xcarchive \
#          -sdk iphoneos \
#          -configuration Debug \
#          -destination generic/platform=iOS \
#          -allowProvisioningUpdates \
#          clean archive
#
#      - name: export ipa
#        env:
#          EXPORT_OPTIONS_PLIST: ${{ secrets.EXPORT_OPTIONS_PLIST }}
#        run: |
#          EXPORT_OPTS_PATH=$RUNNER_TEMP/ExportOptions.plist
#          echo -n "$EXPORT_OPTIONS_PLIST" | base64 --decode -o $EXPORT_OPTS_PATH
#          xcodebuild -exportArchive -archivePath $RUNNER_TEMP/CICDAutomate.xcarchive -exportOptionsPlist $EXPORT_OPTS_PATH -exportPath $RUNNER_TEMP/build
#
#      - name: Upload application
#        uses: actions/upload-artifact@v3
#        with:
#          name: app
#          path: ${{ runner.temp }}/build/CICDAutomate.ipa
#          retention-days: 3


name: Build & Deploy iOS App
on:
  push:
    paths:
      - .github/workflows/iOS_build.yml

jobs:
  build:
    runs-on: macOS-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      
      # - name: Set up Xcode
      #   uses: actions/setup-xcode@v2
      #   with:
      #     xcode-version: '12'  # Use your desired Xcode version
      
      - name: Install CocoaPods
        run: |
          gem install cocoapods
          pod install
      
      - name: Build iOS App
        run: xcodebuild -workspace CICDAutomate.xcworkspace -scheme CICDAutomate -configuration Debug -destination "platform=iOS Simulator,name=iPhone 12" build
      
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: v1.2.13  # Replace with your desired tag name
          release_name: Release v1.2.13 # Replace with your desired release name
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN_GITHUB }}

      - name: Debug Directory Contents
        run: |
          ls -R
          pwd
          ls IPAOutput
      
      - name: Upload IPA
        id: upload_ipa
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: IPAOutput/CICDAutomate.ipa
          asset_name: CICDAutomate.ipa
          asset_content_type: application/octet-stream
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN_GITHUB }}
